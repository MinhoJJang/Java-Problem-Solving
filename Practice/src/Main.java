//문제
//        창영이는 4와 7로 이루어진 수를 좋아한다. 창영이가 좋아하는 수 중에 K번째 작은 수를 구해 출력하는 프로그램을 작성하시오.
//
//        입력
//        첫째 줄에 K(1 ≤ K ≤ 109)가 주어진다.
//
//        출력
//        첫째 줄에 창영이가 좋아하는 숫자 중 K번째 작은 수를 출력한다.


        /* K는 2^1, 2^1+2^2, 2^1+2^2+2^3 ... 사이 값. 각 값을 n번째 경계라고 하자.
            1~2
            3~6
            7~15

            4와 7로만 이루어지고
            n번째 경계는 n-1 번째 경계에서 순서를 찾을 수 있다.

            ex

            4
            7

            ->

            4 4
            4 7

            7 4
            7 7

            ->

            4 44
            4 47
            4 74
            4 77

            7 44
            7 47
            7 74
            7 77

            즉 추가되는 맨 앞자리만 4나 7이고
            뒤에 자리수는 n-1경계에서 n경계 전까지 숫자들 순서랑 똑같음.

            즉 만약 K가 15이다

            그럼 일단 경계를 찾는다

            재귀적으로 위치 찾으면 될듯

            2^0 <= k <= 2^1 1자리
            2^1+2^0 <= k <= 2^1+2^2 2자리
            2^0+2^1+2^2 <= k <= 2^1+2^2+2^3 3자리

            7 8 9 10

            11 12 13 14

            ...

            몇 자리 수인지부터 찾고
            자리수 범위 내에서 절반 이후에 위치하면 7, 아니면 4

        */
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

        int K;
        Scanner sc = new Scanner(System.in);
        K = sc.nextInt();

        int len = 1; // 숫자의 길이

        while(!(K <= Math.pow(2, len+1) - 2)){
            len++;
        }

        // 이거 bfs 같은데?

        // bfs - binary tree로 0 1 0 1 이렇게 찾으면?? 될거같은데 






    }
}